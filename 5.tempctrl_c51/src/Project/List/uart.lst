C51 COMPILER V9.52.0.0   UART                                                              03/31/2022 21:45:14 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Output\uart.obj
COMPILER INVOKED BY: H:\studio\Keil4_C51\C51\BIN\C51.EXE ..\Source\uart.c LARGE BROWSE INCDIR(..\Source;..\User) DEBUG O
                    -BJECTEXTEND PRINT(.\List\uart.lst) TABS(2) OBJECT(.\Output\uart.obj)

line level    source

   1          #include  "uart.h"
   2          
   3          /***************************************************************************
   4           * 描  述 : 串口1初始化函数
   5           * 入  参 : 无
   6           * 返回值 : 无
   7          备注：波特率9600bps   晶振11.0592MHz
   8           **************************************************************************/
   9          void Uart1_Init(void)
  10          {
  11   1        PCON &= 0x3f;   //波特率不倍速，串行口工作方式由SM0、SM1决定
  12   1        SCON = 0x50;    //8位数据,可变波特率，启动串行接收器
  13   1        AUXR |= 0x40;   //定时器1时钟为Fosc,即1T
  14   1        AUXR &= 0xfe;   //串口1选择定时器1为波特率发生器
  15   1        TMOD &= 0x0f;   //清除定时器1模式位
  16   1        TMOD |= 0x20;   //设定定时器1为8位自动重装方式
  17   1        TL1 = 0xDC;     //设定定时初值
  18   1        TH1 = 0xDC;     //设定定时器重装值
  19   1        ET1 = 0;        //禁止定时器1中断
  20   1        TR1 = 1;        //启动定时器1
  21   1        ES = 1;         // 串口1中断打开
  22   1      }
  23          
  24          /***************************************************************************
  25           * 描  述 : 串口1发送数据函数
  26           * 入  参 : uint8 数据
  27           * 返回值 : 无
  28           **************************************************************************/
  29          void SendDataByUart1(uint8 dat)
  30          {
  31   1          SBUF = dat;                 //写数据到UART数据寄存器
  32   1          while(TI == 0);             //在停止位没有发送时，TI为0即一直等待
  33   1          TI = 0;                     //清除TI位（该位必须软件清零）
  34   1      }
  35          
  36          /***************************************************************************
  37           * 描  述 : 串口1发送字符串函数
  38           * 入  参 : uint8 *s 待发送字符串 
  39           * 返回值 : 无
  40           **************************************************************************/
  41          void SendStringByUart1(uint8 *s)
  42          {
  43   1        while(*s)
  44   1        {
  45   2          SendDataByUart1(*s++);       //将字符串中的字符一个一个发送
  46   2        }
  47   1      }
  48          
  49          /***************************************************************************
  50           * 描  述 : 重定向c库函数printf到USART1
  51           * 入  参 : char dat
  52           * 返回值 : char 
  53           **************************************************************************/
  54          char putchar(char dat)
C51 COMPILER V9.52.0.0   UART                                                              03/31/2022 21:45:14 PAGE 2   

  55          {
  56   1          SendDataByUart1(dat);           
  57   1          return dat;                    
  58   1      }
  59          
  60          /***************************************************************************
  61           * 描  述 : 串口1中断服务函数
  62           * 入  参 : 无
  63           * 返回值 : 无
  64           **************************************************************************/
  65          void Uart1() interrupt 4 using 1
  66          {
  67   1        ES = 0;                     // 串口1中断关闭
  68   1      
  69   1        if (RI)                     //串行接收到停止位的中间时刻时，该位置1
  70   1        {
  71   2            RI = 0;                 //清除RI位 （该位必须软件清零）
  72   2         }
  73   1         if (TI)                    //在停止位开始发送时，该位置1
  74   1         {
  75   2            TI = 0;                 //清除TI位（该位必须软件清零）
  76   2         }
  77   1         ES =  1;                   // 串口1中断打开
  78   1      }
  79          
  80          /*********************************END FILE********************************************/ 
  81          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    111    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
